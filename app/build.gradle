apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion project.compileSDK
    defaultConfig {
        applicationId "com.wework.zombiedev"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner" }
    buildTypes {
        debug {
            buildConfigField "String", "API_BASE_URL", "\"https://github-trending-api.now.sh\""
        }
        release {
            buildConfigField "String", "API_BASE_URL", "\"https://github-trending-api.now.sh\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:${project.appCompat}"
    implementation "androidx.core:core-ktx:${project.ktx}"
    implementation "androidx.constraintlayout:constraintlayout:${project.constraintLayout}"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.viewpager2:viewpager2:$vpager2_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'

    
    //dagger
    implementation "com.google.dagger:dagger:${project.dagger}"
    implementation "com.google.dagger:dagger-android-support:${project.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${project.dagger}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${project.dagger}"
    kapt "com.google.dagger:dagger-compiler:${project.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${project.dagger}"

    implementation "com.github.bumptech.glide:glide:${project.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${project.glide}"


    //lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:${project.lifecycle}"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:${project.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${project.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${project.retrofit}"
    implementation "io.reactivex.rxjava2:rxjava:${project.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${project.rxandroid}"

    //okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:${project.okhttp}"

    //shimmer
    implementation "com.facebook.shimmer:shimmer:${project.shimmer}"

    //room
    implementation ("android.arch.persistence.room:runtime:$project.room"){
        exclude module: 'legacy-support-core-utils'
    }
    kapt "android.arch.persistence.room:compiler:$project.room"

    implementation "com.google.android.material:material:${project.material}"



    testImplementation "junit:junit:${project.junit}"
    testImplementation "org.mockito:mockito-core:${project.mockito}"
    androidTestImplementation "org.mockito:mockito-android:${project.mockito}"
    testImplementation "androidx.arch.core:core-testing:${project.archTesting}"
    androidTestImplementation "androidx.test:runner:${project.test_runner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${project.espresso_version}"
    androidTestImplementation "androidx.test:core:${project.test_runner}"
    androidTestImplementation "androidx.arch.core:core-testing:${project.core_testing}"
//    androidTestImplementation 'org.mockito:mockito-core:3.1.0'

    androidTestImplementation "androidx.test.espresso:espresso-core:${project.espresso_version}"
    androidTestImplementation ("androidx.test.espresso:espresso-contrib:${project.espresso_version}"){
        exclude module: 'legacy-support-core-utils'
    }
    androidTestImplementation "com.android.support.test:rules:${project.android_test_version}"
    androidTestImplementation "com.android.support.test:runner:${project.android_test_version}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${project.okhttp}"

}
